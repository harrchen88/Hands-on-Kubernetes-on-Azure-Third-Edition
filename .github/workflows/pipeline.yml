# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
    - Chapter15/*
    - .github/workflows/pipeline.yml
    
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env for reusable variables
env:
   ACRNAME: harrchenhandsonacr

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: GIT checkout
        uses: actions/checkout@v2

      # login 
      - name: Azure Login
        uses: Azure/login@v1.1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - name: Azure Container Registry Login
        run: az acr login -n $ACRNAME
          
      # build image
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.6.1
        with:
          context: ./Chapter15
          push: true
          tags: ${{ env.ACRNAME }}.azurecr.io/website:${{ github.run_number }}

 CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: CI

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: GIT checkout
        uses: actions/checkout@v2

      - name: AKS set context
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: rg-akshandson
          cluster-name: akshandson

      - name: Helm upgrade
        run: |
          helm upgrade website Chapter15/Website --install \
          --set image.repository=$ACRNAME.azurecr.io/website \
          --set image.tab=${{github.run_number}}
        
      - name: Get service IP
        run: |
          PUBLICIP=""
          while [ -z $PUBLICIP ]; do
            echo "Waiting for public IP..."
            PUBLICIP=$(kubectl get service website -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            [ -z "$PUBLICIP" ] && sleep 10
          done
          echo $PUBLICIP

